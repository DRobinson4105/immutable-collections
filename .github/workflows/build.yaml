name: build

on: [push]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
      - name: "checkout"
        uses: actions/checkout@v1

      - name: "get buildTools"
        uses: ModelingValueGroup/buildTools@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "setup JDK"
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: "install packages for building"
        run: sudo apt-get install xmlstarlet jq maven

      - name: "prepare ant"
        run:  |
          cat <<EOF >build.properties
          jdk.home.11=$JAVA_HOME
          path.variable.maven_repository=$HOME/.m2/repository
          EOF

      - name: "(re)generate sources"
        run:  |
          . buildTools.sh
          updateAllPomsFromIntellijDependencies
          cleanupIntellijAntFiles
          ant compile.module.build
          java -cp out/production/build EolCorrector
          java -cp out/production/build HeaderGenerator
          java -cp out/production/build StructGenerator

      - name: "download dependencies (as mentioned in pom)"
        run:  |
          . buildTools.sh
          mkdir -p lib
          mvn_ ${{ secrets.GITHUB_TOKEN }} dependency:copy-dependencies -DoutputDirectory=lib

          ls -l $HOME/.m2/repository/junit/junit/4.12/junit-4.12.jar || :
          ls -l $HOME/.m2/repository/org.hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar || :
          find $HOME -name junit\*.jar
          find $HOME -name hamcrest\*.jar

      - name: "build"
        run:  ant

      - name: "test"
        run:  |
          . buildTools.sh
          generateAntTestFileFromIntellij
          sed -i 's|-->|--><classpath location="lib/junit-4.12.jar"/><classpath location="lib/hamcrest-core-1.3.jar"/>|' test.xml
          echo "::group::test.xml"
          cat test.xml || :
          ls -l out/production out/test || :
          echo "::endgroup::"
          ant -f test.xml

      - name: "push changes back to github"
        run:  |
          . buildTools.sh
          if [[ -f $CHANGES_MADE_MARKER ]]; then
            echo "changes need to be pushed back to github"
            echo "::group::what has changed"
              cat $CHANGES_MADE_MARKER
              rm $CHANGES_MADE_MARKER
            echo "::endgroup::"
            echo "::group::git commit and push"
              git config user.email "automation@modelingvalue.com"
              git config user.name "$GITHUB_ACTOR"
              git add .
              git commit -m "adjusted files [by github actions]"
              git push "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git" "HEAD:${GITHUB_REF#refs/heads/}"
            echo "::endgroup::"
          else
            echo "no changes need to be pushed back to github"
          fi

      - name: "forced stop"
        run:  exit 99
