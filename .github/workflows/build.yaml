name: build

on: [push]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
      - name: "checkout"
        uses: actions/checkout@v1

      - name: "get buildTools"
        uses: ModelingValueGroup/buildTools@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "setup JDK"
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: "install packages for building"
        run: sudo apt-get install xmlstarlet jq maven

      - name: "prepare ant"
        run:  |
          cat <<EOF >build.properties
          jdk.home.11=$JAVA_HOME
          path.variable.maven_repository=$HOME/.m2/repository
          EOF

      - name: "(re)generate sources"
        run:  |
          . buildTools.sh
          updateAllPomsFromIntellijDependencies
          cleanupIntellijAntFiles
          ant compile.module.build
          java -cp out/production/build EolCorrector
          java -cp out/production/build HeaderGenerator
          java -cp out/production/build StructGenerator

      - name: "download dependencies (as mentioned in pom)"
        run:  |
          . buildTools.sh
          mkdir -p lib
          mvn_ ${{ secrets.GITHUB_TOKEN }} dependency:copy-dependencies -DoutputDirectory=lib

      - name: "build"
        run:  ant

      - name: "augment ant files"
        run:  |
          . buildTools.sh
          set -x
          generateAntTestFileFromIntellij
          generateAntJavadocFilesFromIntellij

          echo "::group::build.xml"
          cat build.xml || :
          echo "::endgroup::"

          echo "::group::test.xml"
          cat test.xml || :
          echo "::endgroup::"

          echo "::group::immutable-collections/javadoc.xml"
          cat immutable-collections/javadoc.xml || :
          echo "::endgroup::"

          echo "::group::javadoc.xml"
          cat javadoc.xml || :
          echo "::endgroup::"

          echo "::group::list"
          find . -type f || :
          echo "::endgroup::"

      - name: "test"
        run:  |
          ant -v TEST-results.jar

      - name: "javadoc"
        run:  |
          ant -v javadoc.module.immutable-collections

      - name: "upload immutable-collections.jar"
        uses: actions/upload-artifact@v1
        with:
          name: jdclare.jar
          path: out/artifacts/immutable-collections.jar

      - name: "upload immutable-collections-sources.jar"
        uses: actions/upload-artifact@v1
        with:
          name: immutable-collections-sources.jar
          path: out/artifacts/immutable-collections-sources.jar

      - name: "upload immutable-collections-javadoc.jar"
        uses: actions/upload-artifact@v1
        with:
          name: immutable-collections-javadoc.jar
          path: out/artifacts/immutable-collections-javadoc.jar

      - name: "upload TEST-results.jar"
        uses: actions/upload-artifact@v1
        with:
          name: immutable-collections-testresults.jar
          path: out/artifacts/immutable-collections-testresults.jar

      - name: "push changes back to github"
        run:  |
          . buildTools.sh
          if [[ -f $CHANGES_MADE_MARKER ]]; then
            echo "changes need to be pushed back to github"
            echo "::group::what has changed"
              cat $CHANGES_MADE_MARKER
              rm $CHANGES_MADE_MARKER
            echo "::endgroup::"
            echo "::group::git commit and push"
              git config user.email "automation@modelingvalue.com"
              git config user.name "$GITHUB_ACTOR"
              git add .
              git commit -m "adjusted files [by github actions]"
              git push "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git" "HEAD:${GITHUB_REF#refs/heads/}"
            echo "::endgroup::"
          else
            echo "no changes need to be pushed back to github"
          fi
