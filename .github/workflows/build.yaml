name: build

on: [push]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
      - name: "checkout"
        uses: actions/checkout@v1

      - name: "get buildTools"
        uses: ModelingValueGroup/buildTools@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "setup JDK"
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: "install packages for building"
        run: sudo apt-get install xmlstarlet jq maven

      - name: "prepare ant"
        run:  |
          cat <<EOF >build.properties
          jdk.home.11=$JAVA_HOME
          path.variable.maven_repository=$HOME/.m2/repository
          EOF

      - name: "(re)generate sources"
        run:  |
          . buildTools.sh

          echo "AAAAAAA1"
          updateAllPomsFromIntellijDependencies
          echo "AAAAAAA2"
          cleanupIntellijAntFiles
          echo "AAAAAAA3"
          generateAntTestFileFromIntellij
          echo "AAAAAAA4"

          ant compile.module.build
          echo "AAAAAAA5"
          java -cp out/production/build EolCorrector
          echo "AAAAAAA6"
          java -cp out/production/build HeaderGenerator
          echo "AAAAAAA7"
          java -cp out/production/build StructGenerator
          echo "AAAAAAA8"

      - name: "push changes back to github"
        run:  |
          . buildTools.sh
          if [[ -f $CHANGES_MADE_MARKER ]]; then
            echo "changes need to be pushed back to github:"
            cat $CHANGES_MADE_MARKER
            rm $CHANGES_MADE_MARKER
            echo "::group::git commit and push"
            git config user.email "automation@modelingvalue.com"
            git config user.name "$GITHUB_ACTOR"
            git add .
            git commit -m "adjusted files [by github actions]"
            git push "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git" "HEAD:${GITHUB_REF#refs/heads/}"
            echo "::endgroup::"
          else
            echo "no changes need to be pushed back to github"
          fi

      - name: "get dependencies (as in pom)"
        run:  |
          . buildTools.sh
          mkdir -p lib
          mvn_ ${{ secrets.GITHUB_TOKEN }} dependency:copy-dependencies -DoutputDirectory=lib

      - name: "build"
        run:  ant

      - name: "test"
        run:  ant -f test.xml

      - name: "forced stop"
        run:  exit 99
